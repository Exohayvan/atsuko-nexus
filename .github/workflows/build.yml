name: Build

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64]

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üß∞ Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: üî® Build binary
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            ubuntu-latest) GOOS=linux ;;
            windows-latest) GOOS=windows ;;
            macos-latest) GOOS=darwin ;;
          esac

          GOARCH="${{ matrix.arch }}"

          FILENAME="atsuko-${GOOS}-${GOARCH}"
          [ "$GOOS" = "windows" ] && FILENAME="${FILENAME}.exe"

          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
          echo "OUTPUT_FILENAME=$FILENAME" >> $GITHUB_ENV

          echo "üîß Building $FILENAME for $GOOS/$GOARCH"
          mkdir -p build

          CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -v -o "./build/$FILENAME" ./src/main.go

      - name: ‚¨ÜÔ∏è Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_FILENAME }}
          path: ./build/${{ env.OUTPUT_FILENAME }}