name: Build

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64]

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üß∞ Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: üõ†Ô∏è Set up env for ${{ matrix.os }} ${{ matrix.arch }}
        shell: bash
        run: |
          echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          case "${{ matrix.os }}" in
            ubuntu-latest) echo "GOOS=linux" >> $GITHUB_ENV ;;
            windows-latest) echo "GOOS=windows" >> $GITHUB_ENV ;;
            macos-latest) echo "GOOS=darwin" >> $GITHUB_ENV ;;
          esac

      - name: üì¶ Define output filename
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            ubuntu-latest) echo "GOOS=linux" >> $GITHUB_ENV ;;
            windows-latest) echo "GOOS=windows" >> $GITHUB_ENV ;;
            macos-latest) echo "GOOS=darwin" >> $GITHUB_ENV ;;
          esac
          echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          filename="atsuko-${{ matrix.os == 'windows-latest' && 'windows' || (matrix.os == 'macos-latest' && 'darwin' || 'linux') }}-${{ matrix.arch }}"
          [[ "${{ matrix.os }}" == "windows-latest" ]] && filename="$filename.exe"
          echo "OUTPUT_FILENAME=$filename" >> $GITHUB_ENV

      - name: üî® Build binary
        shell: bash
        run: |
          echo "üîß Building $OUTPUT_FILENAME for $GOOS/$GOARCH"
          mkdir -p build

          CGO_ENABLED=0 go build -v -o ./build/$OUTPUT_FILENAME ./src/main.go

          if [ "$GOOS" != "windows" ]; then
            chmod +x ./build/$OUTPUT_FILENAME
          fi

      - name: ‚¨ÜÔ∏è Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_FILENAME }}
          path: ./build/${{ env.OUTPUT_FILENAME }}
