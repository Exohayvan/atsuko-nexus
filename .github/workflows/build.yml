name: Build

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64]

    steps:
      - name: ðŸ“¥ Checkout repository
        uses: actions/checkout@v3

      - name: ðŸ§° Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: ðŸ”¨ Build binary
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            ubuntu-latest) GOOS=linux ;;
            windows-latest) GOOS=windows ;;
            macos-latest) GOOS=darwin ;;
          esac

          GOARCH="${{ matrix.arch }}"
          EXT=""
          [ "$GOOS" = "windows" ] && EXT=".exe"

          FILENAME="atsuko-${GOOS}-${GOARCH}${EXT}"

          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
          echo "OUTPUT_FILENAME=$FILENAME" >> $GITHUB_ENV

          echo "ðŸ”§ Building $FILENAME for $GOOS/$GOARCH"
          mkdir -p build artifacts

          CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -v -o "./build/$FILENAME" ./src/main.go

          # Ensure it's executable (not needed for Windows but safe to include)
          chmod +x "./build/$FILENAME"

          # Zip it to preserve integrity/permissions
          ZIPFILE="atsuko-${GOOS}-${GOARCH}.zip"
          zip -j "artifacts/$ZIPFILE" "./build/$FILENAME"

          echo "ZIPPED_FILENAME=$ZIPFILE" >> $GITHUB_ENV

      - name: ðŸ“¦ Upload zipped binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIPPED_FILENAME }}
          path: artifacts/${{ env.ZIPPED_FILENAME }}
