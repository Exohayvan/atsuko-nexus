name: Build

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    env:
      ZIPPED_FILENAME: dummy #Value to escape vscode issues
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64]

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üß∞ Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: üî® Build binary
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            ubuntu-latest) GOOS=linux ;;
            windows-latest) GOOS=windows ;;
            macos-latest) GOOS=darwin ;;
          esac

          GOARCH="${{ matrix.arch }}"
          EXT=""
          [ "$GOOS" = "windows" ] && EXT=".exe"

          # üß† Use macos in filename instead of darwin
          FILE_OS="$GOOS"
          [ "$GOOS" = "darwin" ] && FILE_OS="macos"

          FILENAME="atsuko-${FILE_OS}-${GOARCH}${EXT}"

          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
          echo "FILE_OS=$FILE_OS" >> $GITHUB_ENV
          echo "OUTPUT_FILENAME=$FILENAME" >> $GITHUB_ENV

          echo "üîß Building $FILENAME for $GOOS/$GOARCH"
          mkdir -p build artifacts

          CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -v -o "./build/$FILENAME" ./src/main.go

          chmod +x "./build/$FILENAME"

      - name: üì¶ Zip binary (Linux/macOS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          ZIPFILE="atsuko-${FILE_OS}-${GOARCH}.zip"
          zip -j "artifacts/$ZIPFILE" "build/$OUTPUT_FILENAME"
          echo "ZIPPED_FILENAME=$ZIPFILE" >> $GITHUB_ENV

      - name: üì¶ Zip binary (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $zipName = "atsuko-$env:GOOS-$env:GOARCH.zip"
          $binary = "build\$env:OUTPUT_FILENAME"
          $tempDir = "temp-zip"
          $zipPath = "artifacts\$zipName"

          New-Item -ItemType Directory -Path $tempDir -Force | Out-Null
          Copy-Item $binary "$tempDir\" -Force

          Add-Type -AssemblyName 'System.IO.Compression.FileSystem'
          [System.IO.Compression.ZipFile]::CreateFromDirectory($tempDir, $zipPath)

          Remove-Item -Recurse -Force $tempDir

          echo "ZIPPED_FILENAME=$zipName" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: ‚¨ÜÔ∏è Upload zipped binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIPPED_FILENAME }}
          path: artifacts/${{ env.ZIPPED_FILENAME }}