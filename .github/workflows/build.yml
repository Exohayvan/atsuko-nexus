name: Build

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-matrix:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v3

    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    # ─────────────────────────────────────────────────────────────
    # Build MAIN executable
    # ─────────────────────────────────────────────────────────────
    - name: 🛠️  Build main executable
      shell: bash
      run: |
        echo "Generating hidden-imports list…"
        HIDDEN_IMPORTS=$(pip freeze | cut -d '=' -f1 | xargs -I{} echo --hidden-import {} | xargs)
        echo "Hidden imports: $HIDDEN_IMPORTS"

        pyinstaller --onefile --name main \
          --paths=./src/bot \
          --add-data="src/bot/main.py:bot" \
          --add-data="src/bot/commands:bot/commands" \
          --add-data="src/bot/helpers:bot/helpers" \
          $HIDDEN_IMPORTS \
          ./src/bot/main.py

    # ─────────────────────────────────────────────────────────────
    # Build UPDATER executable
    # ─────────────────────────────────────────────────────────────
    - name: 🛠️  Build updater executable
      shell: bash
      run: |
        pyinstaller --onefile --name updater ./src/bot/updater.py

    # ─────────────────────────────────────────────────────────────
    # Upload BOTH artifacts
    # ─────────────────────────────────────────────────────────────
    - name: ⬆️  Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.os }}
        path: |
          dist/main${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          dist/updater${{ matrix.os == 'windows-latest' && '.exe' || '' }}