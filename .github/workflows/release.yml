name: Create Release

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed

permissions:
  contents: write
  actions: read

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout repo
        uses: actions/checkout@v4

      - name: 🔍 Extract version
        id: version
        run: |
          VERSION=$(grep -oP 'Current\s*=\s*"\K[^"]+' src/version/version.go)
          echo "VERSION=$VERSION" | tee -a $GITHUB_ENV

      - name: 🔽 Download all artifacts from Build workflow
        uses: dawidd6/action-download-artifact@v6
        with:
          run_id: ${{ github.event.workflow_run.id }}
          path: artifacts

      - name: 🗂️ List artifact files
        id: artifact_list
        run: |
          ARTIFACT_NAMES=$(find artifacts -type f -exec basename {} \; | paste -sd, -)
          echo "ARTIFACT_NAMES=$ARTIFACT_NAMES" >> $GITHUB_ENV

      - name: 🔖 Generate changelog from last tag
        id: changelog
        run: |
          git fetch --tags --unshallow || true
          git fetch origin main

          VERSION="${{ env.VERSION }}"
          LAST_TAG=$(git tag --sort=-creatordate | grep -v "^${VERSION}$" | head -n1 || true)
          RANGE=""
          [ -n "$LAST_TAG" ] && RANGE="$LAST_TAG..HEAD"

          get_list () {
            KEY="$1"
            git log $RANGE --no-merges --pretty=format:"- %s (%h)" \
              --grep="^\[${KEY}\]" --regexp-ignore-case | \
              sed -E "s/^- \[${KEY}\] /- /I" || true
          }

          ADDED=$(get_list "ADD")
          REMOVED=$(get_list "REMOVE")
          FIXED=$(get_list "FIX")

          [[ -z "$ADDED"   ]] && ADDED="N/A"
          [[ -z "$REMOVED" ]] && REMOVED="N/A"
          [[ -z "$FIXED"   ]] && FIXED="N/A"

          {
            echo "## Changes in ${VERSION}"
            echo
            echo "**Added:**"
            echo "$ADDED"
            echo
            echo "**Removed:**"
            echo "$REMOVED"
            echo
            echo "**Fixed:**"
            echo "$FIXED"
          } > release_notes.md

      - name: 🚀 Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(env.VERSION, 'alpha') || contains(env.VERSION, 'beta') }}

      - name: 📤 Upload binaries to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in $(find artifacts -type f); do
            name=$(basename "$file")
            echo "Uploading $name..."
            curl \
              --request POST \
              --header "Authorization: token $GITHUB_TOKEN" \
              --header "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$name"
          done
